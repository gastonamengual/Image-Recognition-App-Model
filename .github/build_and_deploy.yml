name: Master CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      checks: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install Poetry
      run: pip install poetry

    - name: Set Package Version
        run: |
          package_version=`poetry version -s`
          echo "::set-env name=PACKAGE_VERSION::$(package_version)"

    - name: Verify version is not already uploaded
      run: |
          if poetry search "$PACKAGE_VERSION" | grep -q "$PACKAGE_VERSION"; then
            echo "Error: Version $PACKAGE_VERSION already exists on PyPI."
            exit 1
          else
            echo "Version $PACKAGE_VERSION is not uploaded to PyPI. Proceeding with the workflow"
          fi

    - name: Linter and style check
      run: |
        pip install pre-commit==3.3.1
        pre-commit run --all-file

    - name: Install dependencies
      run: poetry install

    - name: Test with pytest
      run: poetry run test

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        files: |
          pytest-report.xml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}

    name: Build and Publish to PYPI
    env:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}

      run: |
        poetry config pypi-token.pypi "$(PYPI_TOKEN)"
        poetry publish --build